
FELADATSOR

A szakképesítés azonosítószáma és megnevezése: 
54 213 05 Szoftverfejlesztő

A vizsgafeladat megnevezése: 
Programozás és adatbázis-kezelés 


sorozat száma vagy betűjele: 20

időtartam: 120 perc


A 35/2016. (VIII. 31.) NFM rendelet szakmai és vizsgakövetelménye alapján.

Használható segédeszköz: -









Értékelési skála:
81 – 100 pont		5 (jeles)
71 –   80 pont		4 (jó)
61 –   70 pont		3 (közepes)
51 –   60 pont		2 (elégséges)
  0 –   50 pont		1 (elégtelen)

A javítási-értékelési útmutatótól eltérő helyes megoldásokat is el kell fogadni.

A vizsgafeladat értékelési súlyaránya: 20% 

 
1. feladat: Adatbázis-kezelés	Összesen: 20 pont
Karikázza be az alábbi feladatokban a helyesnek tartott válasz betűjelét!
FIGYELEM! Minden feladatban csak egy választ kell bejelölni, ha többet jelöl be, akkor érvénytelen lesz a válasza! Javításhoz húzza át (×) a korábban bejelölt válasz betűjelét és jelölje meg a helyesnek tartott választ!
1.1.	Melyik nem SQL aggregát függvény a felsoroltak közül?
A.	AVG()
B.	COUNT()
C.	MINIMUM()
D.	SUM()
1.2.	Az alábbi operátorok közül melyik NEM tartozik az SQL nyelv logikai operátorai közé?
A.	AND
B.	NOT
C.	XOR
D.	OR
1.3.	Melyik utasítással tudunk SQL adatbázisba táblát létrehozni?
A.	MAKE TABLE
B.	CREATE TABLE
C.	NEW TABLE
D.	DROP TABLE
1.4.	Melyik SQL paranccsal tudunk indexet törölni egy táblából?
A.	DROP INDEX
B.	DELETE INDEX
C.	REMOVE INDEX
D.	ERASE INDEX
1.5.	Minek lehet álnevet (ALIAS) adni egy SQL lekérdezésben?
A.	Mezőknek
B.	Tábláknak
C.	Mezőknek és tábláknak
D.	Kapcsolatoknak (JOIN)
1.6.	Melyik NEM aritmetikai operátor az SQL nyelvben!
A.	+
B.	%
C.	/
D.	&
1.7.	Melyik SQL utasítással tudjuk megjeleníteni a Termek tábla minden adatát?
A.	SELECT *.Termek;
B.	SELECT Termek;
C.	SELECT FROM Termek;
D.	SELECT * FROM Termek;
1.8.	Melyik SQL záradékot kell alkalmazni annak érdekében, hogy a lekérdezés eredménye fizetés szerint csökkenő sorrendben jelenjen meg?
A.	ORDER BY fizetes UP
B.	ORDER BY fizetes DESC
C.	ORDER BY fizetes ASC
D.	ORDER BY fizetes DOWN
1.9.	Melyik WHERE záradék egyenértékű az alábbi lekérdezésben található feltétellel?
SELECT * FROM cds WHERE id NOT IN (90, 91, 92);
A.	WHERE id != 90 OR id != 91 OR id!= 92
B.	WHERE id <=90 AND id >=92
C.	WHERE id NOT LIKE (90, 91, 92)
D.	WHERE id != 90 AND id != 91 AND id != 92)
1.10.	Melyik WHERE záradék használatával kaphatjuk meg a 2500 és a 3500 illetve a közöttük lévő fizetéseket eredményként?
A.	WHERE salary <= 2500 AND salary >= 3500
B.	WHERE salary > 2500 AND salary < 3500
C.	WHERE salary BEETWEN 2500 AND 3500
D.	WHERE salary >= 2500 AND salary <= 3500
 
2. feladat - Programozás	Összesen: 40 pont
Magyarország megyeszékhelyei játék
A következő feladatban egy kvízjátékot kell készítenie, ahol a játékosnak Magyarország megyeszékhelyeit kell kitalálnia a megyék nevei alapján.

A megoldás során vegye figyelembe a következőket:
1.	A képernyőre írást igénylő részfeladatok eredményének megjelenítése előtt írja a képernyőre a feladat sorszámát (például:3. feladat:)!
2.	Az egyes feladatokban a kiírásokat a minta szerint készítse el!
3.	Az ékezetmentes kiírás is elfogadott!
4.	A program megírásakor a fájlban lévő adatok helyes szerkezetét nem kell ellenőriznie, feltételezheti, hogy a rendelkezésre álló adatok a leírtaknak megfelelnek!
5.	A megoldását úgy készítse el, hogy az azonos szerkezetű, de tetszőleges input adatok mellett is helyes eredményt adjon!
Az megyeszekhelyek.txt UTF-8 kódolású állomány soraiban az összetartozó megye megyeszékhely párosokat tároltuk. Az adatokat pontosvessző karakterrel választottuk el. Az adatsorok előtt az állomány első sora a mezőneveket tartalmazza. Például:
Megye;Megyeszekhely
Békés;Békéscsaba
Pest;Budapest
Hajdú-Bihar;Debrecen
…
1.	Készítsen programot a következő feladatok megoldására, amelynek a forráskódját MegyeszekhelyJatek néven mentse el!
2.	Olvassa be az megeszekhelyek.txt állományban lévő adatokat és tárolja el úgy, hogy a további feladatok megoldására alkalmas legyen!
3.	Jelenítse meg a képernyőn a játékszabályokat a minta szerint! Az megyék számát (mdb) a fájlban lévő adatsorok száma alapján határozza meg!
4.	Kérje be a felhasználótól a minta szerint a kitalálandó megyeszékhelyek számát (N)! A adatbekérést mindaddig ismételje, amíg a 2 ≤ N ≤ mdb feltétel nem teljesül, ahol az „mdb” az megyeszekhelyek.txt fájlban lévő megyék darabszáma!
5.	Válasszon ki és tároljon el egy tetszőleges adatszerkezetben véletlenszerűen N darab kitalálandó megye-megyeszékhely párt (elegendő lehet az adatpárok indexeit eltárolni)! Megoldása több pontot ér, ha megakadályozza az azonos megye-megyeszékhely párok ismétlődését!
6.	Jelenítse meg a képernyőn a minta szerint, hogy a kitalálandó megyeszékhelyek nevei közül hány karakter hosszú a legrövidebb és a leghosszabb városnév!
7.	Soronként jelenítse meg az megyék neveit és kérje be a játékos válaszait a minta szerint! Számolja meg a helyes válaszokat! Az értékelésnél a kis-nagybetű eltérés hibás válasznak számítson! Megoldása több pontot ér, ha segítségként a kitalálandó megyeszékhely első karakterét megjeleníti a következő minta szerint és a játékosnak csak a hiányzó karaktereket kell megadnia!
 
8.	Jelenítse meg a játékos eredményét a minta szerint! A játékos százalékos teljesítménye két tizedesjegyre kerekítve jelenjen meg!

Minta:
 
3. feladat: Weblapkészítés	Összesen: 40 pont
Győr-Moson-Sopron megye 
A következő feladatban egy egyszerű weblapot fog készíteni, ami röviden bemutatja Győr-Moson-Sopron megye legfontosabb jellemzőit. A feladat megoldása során a következő állományokat kell felhasználnia: index.html, styles.css, cimer.png, back.png, kastely.jpg, forras.txt. A formázási beállításokat a styles.css stílusállományban végezze el, lehetőleg úgy, hogy az új szelektorok létrehozása a stílusállomány végén történjen! Nagyobb felbontású, színes mintákat a kész weboldalról a minta1.jpg és minta2.jpg állományokban talál, melyeket tilos a megoldásában felhasználni!
1.	Nyissa meg az index.html állományt! Helyezzen el hivatkozást a styles.css stíluslapra!
2.	Állítsa be az oldal kódolását UTF-8-ra, a nyelvet magyarra!
3.	A böngésző címsorában megjelenő cím „Győr-Moson-Sopron megye” legyen!
4.	Az oldal teljes tartalmát tartalmazó div-hez rendelje a tartalom azonosítót (id)!
5.	A tartalom azonosítójú keretben hozza létre a h1 és h2 címsorszintű címeket és a bekezdéseket a mintának megfelelően!
6.	Készítsen egy új keretet (div) a h1-es szintű címsor után, melynek osztályazonosítója kepkeret legyen! Helyezze el a címer képét (cimer.png) az új keretbe! Ha a kép fölé visszük az egeret, vagy a kép valamiért nem jeleníthető meg, akkor mindkét esetben a „Címer” felirat jelenjen meg!
7.	A kép alá, a kepkeret osztályazonosítójú keretbe (div) készítsen a minta szerint képaláírást! A képaláírás kerüljön önálló bekezdésbe, melyhez rendelje a kepfelirat osztályazonosítót!
8.	Alakítsa ki a számozatlan felsorolást a mintának megfelelően!
9.	Sorolja a felsorolásban található települések neveit a kiemelt osztályba span tagok felhasználásával!
10.	Készítse el a táblázatot a minta szerint! A táblázat feletti szöveg a „Járások és települések:”, a táblázat címe (caption) legyen! A táblázat első sorában lévő cellák fejléc típusú cellák legyenek (th)! Alkalmazzon sortörést a „Települések száma” tartalmú cellában a minta szerint!
11.	Alakítsa ki a cím után található csillag karakterre a forrásra hivatkozó linket a minta szerint! Az URL-t a forras.txt állományban találja meg!
12.	Oldja meg, ha az utolsó bekezdésben az „Esterházy-kastély” névre kattintunk, akkor az utolsó bekezdés alatt jelenjen meg a kastely.jpg kép, majd újbóli kattintásra ismét tűnjön el! A megoldás megkezdése előtt tanulmányozza a minta2.jpg állományt!
A következő beállításokat a styles.css stíluslapon végezze!
13.	Hozzon létre új osztályszelektort kiemelt azonosítóval! A kiemelt osztályazonosítóval ellátott szövegek betű színe kék, stílusa félkövér legyen!
14.	A kepfelirat osztályba sorolt bekezdések legyenek dőltek és igazodjanak középre!
15.	Formázza a táblázat címét (caption) és a táblázatot új szelektorok létrehozásával a kiadott mintának megfelelően! A táblázat háttérszíne világosszürke legyen!
16.	A weboldal háttere a back.png kép legyen, a háttérkép mérete 90%-os legyen!
17.	Új szelektor létrehozásával oldja meg, hogy a képkeret osztályú elemek és a táblázat köré kerüljön 4 képpont vastag, folyamatos vonalstílusú, darkslategrey színű szegély!
Minta
 
Minta a 12. feladathoz

 
